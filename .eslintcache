[{"/Users/mac/Documents/React/e_commerce/src/index.js":"1","/Users/mac/Documents/React/e_commerce/src/App.js":"2","/Users/mac/Documents/React/e_commerce/src/components/Products/Products.jsx":"3","/Users/mac/Documents/React/e_commerce/src/components/Products/Product/Product.jsx":"4","/Users/mac/Documents/React/e_commerce/src/components/Products/Product/styles.js":"5","/Users/mac/Documents/React/e_commerce/src/components/index.js":"6","/Users/mac/Documents/React/e_commerce/src/components/Navbar/Navbar.jsx":"7","/Users/mac/Documents/React/e_commerce/src/components/Navbar/styles.js":"8","/Users/mac/Documents/React/e_commerce/src/components/Products/styles.js":"9","/Users/mac/Documents/React/e_commerce/src/lib/commerce.js":"10","/Users/mac/Documents/React/e_commerce/src/components/Cart/Cart.jsx":"11","/Users/mac/Documents/React/e_commerce/src/components/Cart/styles.js":"12","/Users/mac/Documents/React/e_commerce/src/components/Cart/CartItem/CartItem.jsx":"13","/Users/mac/Documents/React/e_commerce/src/components/Cart/CartItem/styles.js":"14","/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/Checkout/styles.js":"16","/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/AddressForm.jsx":"17","/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/PaymentForm.jsx":"18","/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/CustomTextField.jsx":"19","/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/Review.jsx":"20"},{"size":146,"mtime":1611841168256,"results":"21","hashOfConfig":"22"},{"size":2967,"mtime":1611954816357,"results":"23","hashOfConfig":"22"},{"size":718,"mtime":1611862483907,"results":"24","hashOfConfig":"22"},{"size":1433,"mtime":1611862670196,"results":"25","hashOfConfig":"22"},{"size":352,"mtime":1611861705658,"results":"26","hashOfConfig":"22"},{"size":230,"mtime":1611929180383,"results":"27","hashOfConfig":"22"},{"size":1441,"mtime":1611874561380,"results":"28","hashOfConfig":"22"},{"size":1564,"mtime":1611850722160,"results":"29","hashOfConfig":"22"},{"size":286,"mtime":1611850979432,"results":"30","hashOfConfig":"22"},{"size":125,"mtime":1611852712238,"results":"31","hashOfConfig":"22"},{"size":2393,"mtime":1611877765760,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1611870696652,"results":"33","hashOfConfig":"22"},{"size":1294,"mtime":1611877510599,"results":"34","hashOfConfig":"22"},{"size":333,"mtime":1611873623921,"results":"35","hashOfConfig":"22"},{"size":4023,"mtime":1611959396950,"results":"36","hashOfConfig":"22"},{"size":1157,"mtime":1611931393201,"results":"37","hashOfConfig":"22"},{"size":5443,"mtime":1611954817089,"results":"38","hashOfConfig":"22"},{"size":3040,"mtime":1611959480260,"results":"39","hashOfConfig":"22"},{"size":549,"mtime":1611958278176,"results":"40","hashOfConfig":"22"},{"size":1088,"mtime":1611948188464,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"pulzdt",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/mac/Documents/React/e_commerce/src/index.js",[],["87","88"],"/Users/mac/Documents/React/e_commerce/src/App.js",[],"/Users/mac/Documents/React/e_commerce/src/components/Products/Products.jsx",[],"/Users/mac/Documents/React/e_commerce/src/components/Products/Product/Product.jsx",[],"/Users/mac/Documents/React/e_commerce/src/components/Products/Product/styles.js",[],"/Users/mac/Documents/React/e_commerce/src/components/index.js",[],"/Users/mac/Documents/React/e_commerce/src/components/Navbar/Navbar.jsx",["89","90"],"import React from 'react';\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport logo from '../../assets/commerce.png';\nimport useStyles from './styles';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nconst Navbar = ({ totalItems }) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n                <Toolbar>\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\" >\n                        <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\n                        Commerce.js\n                    </Typography>\n\n                    <div className={classes.grow} />\n\n                    {location.pathname === '/' && (\n                    <div className={classes.button} >\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\n                            <Badge badgeContent={totalItems} color=\"secondary\">\n                                <ShoppingCart />\n                            </Badge>\n                        </IconButton>\n                    </div>) }\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Navbar;","/Users/mac/Documents/React/e_commerce/src/components/Navbar/styles.js",[],"/Users/mac/Documents/React/e_commerce/src/components/Products/styles.js",[],"/Users/mac/Documents/React/e_commerce/src/lib/commerce.js",[],"/Users/mac/Documents/React/e_commerce/src/components/Cart/Cart.jsx",[],"/Users/mac/Documents/React/e_commerce/src/components/Cart/styles.js",[],"/Users/mac/Documents/React/e_commerce/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/mac/Documents/React/e_commerce/src/components/Cart/CartItem/styles.js",[],"/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/Checkout/Checkout.jsx",["91"],"import React, { useState, useEffect } from 'react';\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\nimport useStyles from './styles';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\nimport { commerce } from '../../../lib/commerce';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst steps = ['Shipping address', 'Payment details']\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [checkoutToken, setCheckoutToken] = useState(null);\n    const [shippingData, setShippingData] = useState({});\n    const [isFinished, setIsFinished] = useState(false);\n    const classes = useStyles();\n    const history = useHistory();\n\n    useEffect(() => {\n        const generateToken = async () => {\n            try {\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n\n                setCheckoutToken(token);\n            } catch (error) {\n                console.log(error);\n                history.push('/');\n            };\n        };\n\n        generateToken();\n    }, [cart]);\n\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n    const next = (data) => {\n        setShippingData(data);\n\n        nextStep();\n    }\n\n    const timeout = () => {\n        setTimeout(() => {\n            setIsFinished(true);\n        }, 3000)\n    }\n\n    let Confirmation = () => order.customer ?(\n        <>\n            <div>\n                <Typography variant=\"h5\">\n                    Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}\n                </Typography>\n                <Divider className={classes.divider} />\n                <Typography variant=\"subtitle2\">Order ref:{order.customer_reference}</Typography>\n            </div>\n            <br />\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to home</Button>\n        </>\n    ): isFinished ? (\n        <>\n        <div>\n            <Typography variant=\"h5\">\n                Thank you for your purchase\n            </Typography>\n            <Divider className={classes.divider} />\n        </div>\n        <br />\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to home</Button>\n    </>\n    ) : (\n        <div className={classes.spinner}>\n            <CircularProgress />\n        </div>\n    );\n\n    if(error) {\n        <>\n            <Typography variant=\"h5\">Error: {error}</Typography>\n            <br />\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to home</Button>\n        </>\n    }\n\n\n    const Form = () => activeStep === 0\n        ? <AddressForm checkoutToken={checkoutToken} next={next} /> \n        : <PaymentForm \n            shippingData={shippingData} \n            checkoutToken={checkoutToken} \n            backStep={backStep} \n            nextStep={nextStep}\n            timeout={timeout}\n            onCaptureCheckout={onCaptureCheckout}/>\n\n    return (\n        <>\n            <CssBaseline />\n            <div className={classes.toolbar} />\n            <main className={classes.layout} >\n                <Paper className={classes.paper} >\n                    <Typography variant=\"h4\" align=\"center\" >\n                        Checkout\n                    </Typography>\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\n                        {steps.map((step) => (\n                            <Step key={step} >\n                                <StepLabel>{step}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    {activeStep === steps.length ? <Confirmation />: checkoutToken && <Form /> }\n                </Paper>\n            </main>\n        </>\n    );\n};\n\nexport default Checkout;","/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/AddressForm.jsx",["92","93"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce';\nimport { Link } from 'react-router-dom';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n\n    const methods = useForm();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name}));\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name}));\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        \n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n        \n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    };\n\n    const fetchShippingOptions =  async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions( checkoutTokenId, { country, region });\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    };\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, []);\n\n    useEffect(() => {\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n\n    useEffect(() => { \n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision)\n    }, [shippingSubdivision]);\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom >Shipping Address</Typography>\n            <FormProvider {...methods} >\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))} >\n                    <Grid container spacing={3}>\n                        <FormInput name=\"firstName\" label=\"First Name\" />\n                        <FormInput name=\"lastName\" label=\"Last Name\" />\n                        <FormInput name=\"email\" label=\"Email\" />\n                        <FormInput name=\"address1\" label=\"Address\" />\n                        <FormInput name=\"city\" label=\"City\" />                    \n                        <FormInput name=\"zip\" label=\"Zip/ Postal Code\" />\n\n                        <Grid item xs={12} sm={6} >\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                        {country.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subdivisions.map((subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                                        {subdivision.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid> \n\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                        <Button component={Link} to='/cart' variant=\"outlined\"> Back to Cart </Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\"> Next </Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    );\n};\n\nexport default AddressForm;","/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/PaymentForm.jsx",[],"/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/CustomTextField.jsx",[],"/Users/mac/Documents/React/e_commerce/src/components/CheckoutForm/Review.jsx",[],["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":46,"nodeType":"102","messageId":"103","endLine":2,"endColumn":54},{"ruleId":"100","severity":1,"message":"104","line":2,"column":56,"nodeType":"102","messageId":"103","endLine":2,"endColumn":60},{"ruleId":"105","severity":1,"message":"106","line":31,"column":8,"nodeType":"107","endLine":31,"endColumn":14,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":45,"column":8,"nodeType":"107","endLine":45,"endColumn":10,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":53,"column":8,"nodeType":"107","endLine":53,"endColumn":29,"suggestions":"112"},{"ruleId":"96","replacedBy":"113"},{"ruleId":"98","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["119"],["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [cart, history]",{"range":"126","text":"127"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"128","text":"129"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"130","text":"131"},[1203,1209],"[cart, history]",[2085,2087],"[checkoutToken.id]",[2344,2365],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]